let config = {
    type: Phaser.canvas,
    height: 600,
    width: 800,
    backgroundColor : 0xffcc00,
    scene : {
        preload : preload,
        create : create,
        update : update,
    }
}

let game = new Phaser.Game(config);     // created game object of Game class from Phaser with config object
let prizes = ["3000 CB Credits", "35 % OFF!", "Hard Luck", "70 % OFF!", "CB Swagpack", "100 % OFF!", "Netflix Subs", "50 % OFF", "Amazon Voucher", "2 Extra Spin", "CB Tshirt", "CB Book"];

function preload()
{
    console.log("in preload");
    console.log(this);
    this.load.image('background', 'Assets/back.jpg');       // this refers to scene object
    this.load.image('pin', 'Assets/pin.png');
    this.load.image('wheel', 'Assets/wheel.png');       // assigned name to image and location
    this.load.image('stand', 'Assets/stand.png');
    this.load.image('button', 'Assets/touch.png');
    this.load.audio("spin", "Assets/spin.mp3");
}

function create()
{
    font_style = {          // object
        font : "bold 30px Roboto",
        color : "red",
    }
    let W = game.config.width;      // gets width property from config object which is in game object
    let H = game.config.height;

    let bg = this.add.sprite(W/2, H/2, 'background');       // places the background at (x,y)
    bg.setScale(0.20);

    this.game_text = this.add.text(10, 10, "Welcome to Spin & Win", font_style);        // adds text to scene

    let stand = this.add.sprite(W/2, H/2 + 250, 'stand');
    stand.setScale(0.20);                   // shrink or expand

    let pin = this.add.sprite(0, 0, 'pin');
    pin.setPosition(W/2, H/2 - 260);
    pin.setScale(0.20);
    pin.setDepth(1);

    this.wheel = this.add.sprite(W/2, H/2, 'wheel');        // assigns wheel attribute to scene object
    this.wheel.setScale(0.25);
    //this.wheel.alpha = 0.001;      // manipulates transparency

    this.clickButton = this.add.sprite(W - 100, H - 50, "button").setInteractive();
    this.clickButton.on('pointerdown', spinwheel, this);

    //this.input.on('pointerdown', spinwheel, this);      // adds eventlistener of touch

    this.spinSound = this.sound.add("spin");
    this.spinSound.setSeek(10);

}

function update()       // works like game-loop
{
    console.log("in update");
    //this.wheel.angle += 0.5;
}

function spinwheel()
{
    this.input.enabled = false;
    this.cameras.main.shake(500);
    this.spinSound.play();
    this.game_text.setText("You clicked!");

    let rounds = Phaser.Math.Between(8, 10);
    let angle = Phaser.Math.Between(0, 11) * 30;

    let index = prizes.length - 1 - Math.floor(angle/30); 

    let totalAngle = rounds * 360 + angle;

    tween = this.tweens.add({
        targets : this.wheel,
        angle : totalAngle,                     // moves from angle 0 to whatver is generated by random
        ease : "Cubic.easeOut",         // slow down effect
        duration : 14000,                        // over a duration of 6000 ms
        callbackScope : this,
        onComplete:function()
        {
            if (prizes[index] == "Hard Luck")
                this.game_text.setText("Better luck next time!");
            else
                this.game_text.setText("You won " + prizes[index]);
            this.input.enabled = true;
            this.spinSound.stop();
        }
    })
    
    
}